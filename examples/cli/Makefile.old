USE_LIBVORBIS = false
USE_STB_VORBIS = true
USE_DR_MP3 = true
USE_LIBOPUS = false
USE_LIBFLAC = false
USE_DR_FLAC = true
USE_DR_WAV = true
USE_LIBSNDFILE = false
USE_LIBOPENMPT = false
USE_LIBXMP = true
USE_LIBXMPLITE = false
USE_PXTONE = true
USE_SNES_SPC = true
# Can be 'miniaudio', 'SDL1', 'SDL2', 'Cubeb', or 'PortAudio'
BACKEND = miniaudio

CLOWNAUDIO_DIR = ../../src

ifneq ($(RELEASE),)
  CFLAGS = -O2 -flto
else
  CFLAGS = -Og -ggdb3
endif
ALL_CFLAGS = -std=gnu99 -MMD -MP -MF $@.d -DCLOWNAUDIO_EXPORT= -DCLOWNAUDIO_NO_EXPORT= -I$(CLOWNAUDIO_DIR)/../include $(CFLAGS)

ifneq ($(RELEASE),)
  CXXFLAGS = -O2 -flto
else
  CXXFLAGS = -Og -ggdb3
endif
ALL_CXXFLAGS = -std=c++98 -MMD -MP -MF $@.d -DCLOWNAUDIO_EXPORT= -DCLOWNAUDIO_NO_EXPORT= -I$(CLOWNAUDIO_DIR)/../include$(CXXFLAGS)

ifneq ($(RELEASE),)
  LDFLAGS = -s
else
  LDFLAGS =
endif
ALL_LDFLAGS = $(LDFLAGS)

LIBS =
ALL_LIBS = $(LIBS)

SDL1_CFLAGS = $(shell pkg-config sdl --cflags)
SDL1_LIBS = $(shell pkg-config sdl --libs --static)

SDL2_CFLAGS = $(shell pkg-config sdl2 --cflags)
SDL2_LIBS = $(shell pkg-config sdl2 --libs --static)

CLOWNAUDIO_SOURCES = \
  clownaudio.c \
  miniaudio.c \
  mixer.c \
  decoding/decoder_selector.c \
  decoding/predecoder.c \
  decoding/resampled_decoder.c \
  decoding/split_decoder.c \
  decoding/decoders/memory_stream.c

ifeq ($(USE_LIBVORBIS), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/libvorbis.c
  ALL_CFLAGS += -DCLOWNAUDIO_LIBVORBIS $(shell pkg-config vorbisfile --cflags)
  ALL_LIBS += $(shell pkg-config vorbisfile --libs --static)
endif

ifeq ($(USE_STB_VORBIS), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/stb_vorbis.c
  ALL_CFLAGS += -DCLOWNAUDIO_STB_VORBIS
  ALL_LIBS += -lm
endif

ifeq ($(USE_DR_MP3), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/dr_mp3.c
  ALL_CFLAGS += -DCLOWNAUDIO_DR_MP3
endif

ifeq ($(USE_LIBOPUS), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/libopus.c
  ALL_CFLAGS += -DCLOWNAUDIO_LIBOPUS $(shell pkg-config opusfile --cflags)
  ALL_LIBS += $(shell pkg-config opusfile --libs --static)
endif

ifeq ($(USE_LIBFLAC), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/libflac.c
  ALL_CFLAGS += -DCLOWNAUDIO_LIBFLAC $(shell pkg-config flac --cflags)
  ALL_LIBS += $(shell pkg-config flac --libs --static)
endif

ifeq ($(USE_DR_FLAC), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/dr_flac.c
  ALL_CFLAGS += -DCLOWNAUDIO_DR_FLAC
endif

ifeq ($(USE_DR_WAV), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/dr_wav.c
  ALL_CFLAGS += -DCLOWNAUDIO_DR_WAV
endif

ifeq ($(USE_LIBSNDFILE), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/libsndfile.c
  ALL_CFLAGS += -DCLOWNAUDIO_LIBSNDFILE $(shell pkg-config sndfile --cflags)
  ALL_LIBS += $(shell pkg-config sndfile --libs --static)
endif

ifeq ($(USE_LIBOPENMPT), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/libopenmpt.c
  ALL_CFLAGS += -DCLOWNAUDIO_LIBOPENMPT $(shell pkg-config libopenmpt --cflags)
  ALL_LIBS += $(shell pkg-config libopenmpt --libs --static)
endif

ifeq ($(USE_LIBXMP), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/libxmp.c
  ALL_CFLAGS += -DCLOWNAUDIO_LIBXMP

  ifeq ($(shell pkg-config libxmp --exists && echo 1), 1)
    ALL_CFLAGS += $(shell pkg-config libxmp --cflags)
    ALL_LIBS += $(shell pkg-config libxmp --libs --static)
  else
    ALL_CFLAGS += -I$(CLOWNAUDIO_DIR)/decoding/decoders/libs/libxmp/include
  endif
endif

ifeq ($(USE_LIBXMPLITE), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/libxmp.c
  ALL_CFLAGS += -DCLOWNAUDIO_LIBXMP

  ifeq ($(shell pkg-config libxmp-lite --exists && echo 1), 1)
    ALL_CFLAGS += $(shell pkg-config libxmp-lite --cflags)
    ALL_LIBS += $(shell pkg-config libxmp-lite --libs --static)
  else
    ALL_CFLAGS += -I$(CLOWNAUDIO_DIR)/decoding/decoders/libs/libxmp-lite/include/libxmp-lite
  endif
endif

ifeq ($(USE_PXTONE), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/pxtone.cpp decoding/decoders/pxtone_noise.cpp
  ALL_CFLAGS += -DCLOWNAUDIO_PXTONE
  ALL_LIBS += -lstdc++
  # Apparently PxTone supports Vorbis-encoded samples
  ifeq ($(USE_LIBVORBIS), true)
    ALL_CXXFLAGS += -DpxINCLUDE_OGGVORBIS
  endif
endif

ifeq ($(USE_SNES_SPC), true)
  CLOWNAUDIO_SOURCES += decoding/decoders/snes_spc.c
  ALL_CFLAGS += -DCLOWNAUDIO_SNES_SPC
  ALL_LIBS += -lstdc++
endif

ifeq ($(BACKEND), miniaudio)
  CLOWNAUDIO_SOURCES += playback/miniaudio.c
  ALL_CFLAGS += -DMINIAUDIO_ENABLE_DEVICE_IO
  ALL_LIBS += -lpthread -lm

  ifneq ($(WINDOWS), 1)
    ALL_LIBS += -ldl
  endif
else ifeq ($(BACKEND), SDL1)
  CLOWNAUDIO_SOURCES += playback/sdl1.c
  ALL_CFLAGS += $(SDL1_CFLAGS)
  ALL_LIBS += $(SDL1_LIBS)
else ifeq ($(BACKEND), SDL2)
  CLOWNAUDIO_SOURCES += playback/sdl2.c
  ALL_CFLAGS += $(SDL2_CFLAGS)
  ALL_LIBS += $(SDL2_LIBS)
else ifeq ($(BACKEND), Cubeb)
  CLOWNAUDIO_SOURCES += playback/cubeb.c
  ALL_LIBS += -lcubeb
else ifeq ($(BACKEND), PortAudio)
  CLOWNAUDIO_SOURCES += playback/portaudio.c
  ALL_CFLAGS += $(shell pkg-config portaudio-2.0 --cflags)
  ALL_LIBS += $(shell pkg-config portaudio-2.0 --libs --static)
endif

LIBXMP_SOURCES = \
  src/control.c \
  src/dataio.c \
  src/effects.c \
  src/extras.c \
  src/filter.c \
  src/format.c \
  src/hio.c \
  src/hmn_extras.c \
  src/lfo.c \
  src/load.c \
  src/load_helpers.c \
  src/md5.c \
  src/med_extras.c \
  src/memio.c \
  src/misc.c \
  src/mix_all.c \
  src/mix_paula.c \
  src/mixer.c \
  src/mkstemp.c \
  src/period.c \
  src/player.c \
  src/read_event.c \
  src/scan.c \
  src/smix.c \
  src/tempfile.c \
  src/virtual.c \
  src/win32.c \
  src/depackers/arcfs.c \
  src/depackers/bunzip2.c \
  src/depackers/crc32.c \
  src/depackers/depacker.c \
  src/depackers/gunzip.c \
  src/depackers/inflate.c \
  src/depackers/mmcmp.c \
  src/depackers/muse.c \
  src/depackers/oxm.c \
  src/depackers/ppdepack.c \
  src/depackers/ptpopen.c \
  src/depackers/readlzw.c \
  src/depackers/readrle.c \
  src/depackers/s404_dec.c \
  src/depackers/unarc.c \
  src/depackers/uncompress.c \
  src/depackers/unlha.c \
  src/depackers/unlzx.c \
  src/depackers/unsqsh.c \
  src/depackers/unxz.c \
  src/depackers/unzip.c \
  src/depackers/vorbis.c \
  src/depackers/xfd.c \
  src/depackers/xfd_link.c \
  src/depackers/xfnmatch.c \
  src/depackers/xz_dec_lzma2.c \
  src/depackers/xz_dec_stream.c \
  src/loaders/669_load.c \
  src/loaders/abk_load.c \
  src/loaders/amf_load.c \
  src/loaders/arch_load.c \
  src/loaders/asif.c \
  src/loaders/asylum_load.c \
  src/loaders/chip_load.c \
  src/loaders/coco_load.c \
  src/loaders/common.c \
  src/loaders/dbm_load.c \
  src/loaders/digi_load.c \
  src/loaders/dt_load.c \
  src/loaders/emod_load.c \
  src/loaders/far_load.c \
  src/loaders/flt_load.c \
  src/loaders/fnk_load.c \
  src/loaders/gal4_load.c \
  src/loaders/gal5_load.c \
  src/loaders/gdm_load.c \
  src/loaders/hmn_load.c \
  src/loaders/ice_load.c \
  src/loaders/iff.c \
  src/loaders/imf_load.c \
  src/loaders/ims_load.c \
  src/loaders/it_load.c \
  src/loaders/itsex.c \
  src/loaders/liq_load.c \
  src/loaders/masi_load.c \
  src/loaders/mdl_load.c \
  src/loaders/med2_load.c \
  src/loaders/med3_load.c \
  src/loaders/med4_load.c \
  src/loaders/mfp_load.c \
  src/loaders/mgt_load.c \
  src/loaders/mmd_common.c \
  src/loaders/mmd1_load.c \
  src/loaders/mmd3_load.c \
  src/loaders/mod_load.c \
  src/loaders/mtm_load.c \
  src/loaders/no_load.c \
  src/loaders/okt_load.c \
  src/loaders/psm_load.c \
  src/loaders/pt3_load.c \
  src/loaders/ptm_load.c \
  src/loaders/pw_load.c \
  src/loaders/rtm_load.c \
  src/loaders/s3m_load.c \
  src/loaders/sample.c \
  src/loaders/sfx_load.c \
  src/loaders/st_load.c \
  src/loaders/stim_load.c \
  src/loaders/stm_load.c \
  src/loaders/stx_load.c \
  src/loaders/sym_load.c \
  src/loaders/ult_load.c \
  src/loaders/umx_load.c \
  src/loaders/voltable.c \
  src/loaders/xm_load.c \
  src/loaders/prowizard/ac1d.c \
  src/loaders/prowizard/di.c \
  src/loaders/prowizard/eureka.c \
  src/loaders/prowizard/fc-m.c \
  src/loaders/prowizard/fuchs.c \
  src/loaders/prowizard/fuzzac.c \
  src/loaders/prowizard/gmc.c \
  src/loaders/prowizard/heatseek.c \
  src/loaders/prowizard/hrt.c \
  src/loaders/prowizard/ksm.c \
  src/loaders/prowizard/mp.c \
  src/loaders/prowizard/noiserun.c \
  src/loaders/prowizard/novotrade.c \
  src/loaders/prowizard/np1.c \
  src/loaders/prowizard/np2.c \
  src/loaders/prowizard/np3.c \
  src/loaders/prowizard/p40.c \
  src/loaders/prowizard/p61a.c \
  src/loaders/prowizard/pha.c \
  src/loaders/prowizard/pm10c.c \
  src/loaders/prowizard/pm18a.c \
  src/loaders/prowizard/pp10.c \
  src/loaders/prowizard/pp21.c \
  src/loaders/prowizard/prowiz.c \
  src/loaders/prowizard/prun1.c \
  src/loaders/prowizard/prun2.c \
  src/loaders/prowizard/ptktable.c \
  src/loaders/prowizard/skyt.c \
  src/loaders/prowizard/starpack.c \
  src/loaders/prowizard/tdd.c \
  src/loaders/prowizard/theplayer.c \
  src/loaders/prowizard/titanics.c \
  src/loaders/prowizard/tp1.c \
  src/loaders/prowizard/tp3.c \
  src/loaders/prowizard/tuning.c \
  src/loaders/prowizard/unic.c \
  src/loaders/prowizard/unic2.c \
  src/loaders/prowizard/wn.c \
  src/loaders/prowizard/xann.c \
  src/loaders/prowizard/zen.c

LIBXMPLITE_SOURCES = \
  src/virtual.c \
  src/format.c \
  src/period.c \
  src/player.c \
  src/read_event.c \
  src/dataio.c \
  src/lfo.c \
  src/scan.c \
  src/control.c \
  src/filter.c \
  src/effects.c \
  src/mixer.c \
  src/mix_all.c \
  src/load_helpers.c \
  src/load.c \
  src/hio.c \
  src/smix.c \
  src/memio.c \
  src/loaders/common.c \
  src/loaders/itsex.c \
  src/loaders/sample.c \
  src/loaders/xm_load.c \
  src/loaders/mod_load.c \
  src/loaders/s3m_load.c \
  src/loaders/it_load.c

PXTONE_SOURCES = \
  pxtnDelay.cpp \
  pxtnDescriptor.cpp \
  pxtnError.cpp \
  pxtnEvelist.cpp \
  pxtnMaster.cpp \
  pxtnMem.cpp \
  pxtnOverDrive.cpp \
  pxtnPulse_Frequency.cpp \
  pxtnPulse_Noise.cpp \
  pxtnPulse_NoiseBuilder.cpp \
  pxtnPulse_Oggv.cpp \
  pxtnPulse_Oscillator.cpp \
  pxtnPulse_PCM.cpp \
  pxtnService.cpp \
  pxtnService_moo.cpp \
  pxtnText.cpp \
  pxtnUnit.cpp \
  pxtnWoice.cpp \
  pxtnWoice_io.cpp \
  pxtnWoicePTV.cpp \
  pxtoneNoise.cpp

SPC_SOURCES = \
  dsp.cpp \
  SNES_SPC.cpp \
  SNES_SPC_misc.cpp \
  SNES_SPC_state.cpp \
  spc.cpp \
  SPC_DSP.cpp \
  SPC_Filter.cpp

OBJECTS += obj/test.o
OBJECTS += $(addprefix obj/clownaudio/, $(addsuffix .o, $(CLOWNAUDIO_SOURCES)))
ifeq ($(USE_LIBXMP), true)
  ifneq ($(shell pkg-config libxmp --exists && echo 1), 1)
    OBJECTS += $(addprefix obj/libxmp/, $(addsuffix .o, $(LIBXMP_SOURCES)))
  endif
endif
ifeq ($(USE_LIBXMPLITE), true)
  ifneq ($(shell pkg-config libxmp-lite --exists && echo 1), 1)
    OBJECTS += $(addprefix obj/libxmp-lite/, $(addsuffix .o, $(LIBXMPLITE_SOURCES)))
  endif
endif
ifeq ($(USE_PXTONE), true)
  OBJECTS += $(addprefix obj/pxtone/, $(addsuffix .o, $(PXTONE_SOURCES)))
endif
ifeq ($(USE_SNES_SPC), true)
  OBJECTS += $(addprefix obj/spc/, $(addsuffix .o, $(SPC_SOURCES)))
endif

DEPENDENCIES = $(addsuffix .d, $(OBJECTS))

all: test

obj/test.o: test.c
	$(info Compiling $<)
	@mkdir -p $(@D)
	@$(CC) $(ALL_CFLAGS) -Wall -Wextra -pedantic -I. -I../include $< -o $@ -c

obj/clownaudio/%.c.o: $(CLOWNAUDIO_DIR)/%.c
	$(info Compiling $<)
	@mkdir -p $(@D)
	@$(CC) $(ALL_CFLAGS) -Wall -Wextra -pedantic -I. -I../include $< -o $@ -c

obj/clownaudio/%.cpp.o: $(CLOWNAUDIO_DIR)/%.cpp
	$(info Compiling $<)
	@mkdir -p $(@D)
	@$(CXX) $(ALL_CXXFLAGS) -Wall -Wextra -pedantic -I. -I../include $< -o $@ -c

obj/libxmp/%.o: $(CLOWNAUDIO_DIR)/decoding/decoders/libs/libxmp/%
	$(info Compiling $<)
	@mkdir -p $(@D)
	@$(CC) $(ALL_CFLAGS) -Wall -Wextra -pedantic -Wno-unused-parameter -Wno-sign-compare -Wno-maybe-uninitialized -DPATH_MAX=1024 $< -o $@ -c

obj/libxmp-lite/%.o: $(CLOWNAUDIO_DIR)/decoding/decoders/libs/libxmp-lite/%
	$(info Compiling $<)
	@mkdir -p $(@D)
	@$(CC) $(ALL_CFLAGS) -Wall -Wextra -pedantic -Wno-unused-parameter -Wno-sign-compare -Wno-maybe-uninitialized -DLIBXMP_CORE_PLAYER=1 -DLIBXMP_NO_DEPACKERS=1 $< -o $@ -c

obj/pxtone/%.o: $(CLOWNAUDIO_DIR)/decoding/decoders/libs/pxtone/%
	$(info Compiling $<)
	@mkdir -p $(@D)
	@$(CXX) $(ALL_CXXFLAGS) -std=c++11 -Wall -Wextra -pedantic $< -o $@ -c

obj/spc/%.o: $(CLOWNAUDIO_DIR)/decoding/decoders/libs/snes_spc-0.9.0/snes_spc/%
	$(info Compiling $<)
	@mkdir -p $(@D)
	@$(CXX) $(ALL_CXXFLAGS) $< -o $@ -c

test: $(OBJECTS)
	$(info Linking $@)
	@$(CC) $(ALL_CFLAGS) -Wall -Wextra -pedantic $^ -o $@ $(ALL_LDFLAGS) $(ALL_LIBS)

include $(wildcard $(DEPENDENCIES))
